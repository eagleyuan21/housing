class Main {
	
  public static void main(String[] args) {
	  
	  int numel;
	  boolean search_sort;
	  int searching;
	  String type;
	  
	  numel = 7;
	  search_sort = false;
	  type = "Insertion";
	  
	  int[] holder = setarr(numel);
	  
	  if(search_sort)
	  {
		  searching = 11;
		  holder[(int)Math.random() * numel] = searching;
	  }
	  else {
		  searching = -1;
	  }
	  
	  runsim(holder, search_sort, searching, type);
  }
  
  public static int[] setarr(int size)
  {
	  int[] arr = new int[size];
	  
	  for (int i = 0; i < size; i++)
	  {
		  arr[i] = (int)(Math.random() * size * 4);
	  }
	  
	  return arr;
  }
  
  public static void runsim(int[] arr, boolean search_or_sort, int searching, String spec)
  {
	  if(search_or_sort)
	  {
		  
	  }
	  else {
		  if(spec.contentEquals("Insertion"))
		  {
			  insertsort(arr);
		  }
	  }
  }
  
  void insertsort(int arr[]) 
  { 
      int n = arr.length; 
      for (int i = 1; i < n; ++i) { 
          int key = arr[i]; 
          int j = i - 1; 

          /* Move elements of arr[0..i-1], that are 
             greater than key, to one position ahead 
             of their current position */
          while (j >= 0 && arr[j] > key) { 
              arr[j + 1] = arr[j]; 
              j = j - 1; 
          } 
          arr[j + 1] = key; 
      } 
  }
  
}